@page
@model PasswordRecoveryModel

@section Security {
    <link href="~/css/Security.css" rel="stylesheet" />
}

<div class="accForm">
    <form method="post">
        <div asp-validation-summary="ModelOnly"></div>
        <div>
            <label asp-for="Email">Email</label>
            <input class="formInput" asp-for="Email" />
            <input type="button" asp-page-handler="Verifying" class="formInput"  value="@Model.Email" />
            <span asp-validation-for="Email" class="text-warning"></span>
        </div>
        @if (Model.UserExists)
        {
            <div>
                <label>Verification Code</label>
                <input type="text" asp-for="Code" />
                <input type="submit"  />
            </div>
        }
        <div>
            <button type="submit" class="buttn">Submit</button>
        </div>
    </form>
</div>

@functions {
    public class PasswordRecoveryModel: PageModel
    {
        private UserManager<AppUser> userManager;

        public PasswordRecoveryModel(UserManager<AppUser> userManager)
        {
            this.userManager = userManager;
        }

        [BindProperty][Required, EmailAddress]
        public string Email { get; set; }

        [BindProperty][Required]
        public string Code { get; set; }

        public bool UserExists { get; set; } = false;

        public async Task OnPostVerifyingAsync()
        {
            if (ModelState.IsValid)
            {
                AppUser user = await userManager.FindByEmailAsync(Email);
                if (user is not null)
                {
                    UserExists = true;
                }

                //TODO
                //Send verification code via email
                //check verification code

            }
        }
    }
}
